from random import choice
import string


# 获取随机密码
def gen_passwd(length=8, chars=string.ascii_letters + string.digits):
    return ''.join([choice(chars) for _ in range(length)])


# & 运算
# 判断奇数偶数
print(2 & 1 == 0)
print(3 & 1 == 0)

#                       |                     运算
# 把数变成最接近的偶数
print((123                       |                     1) - 1)

# ^ 运算
# 以下都是交换两个数
a, b = 200, 300
a = a + b
b = a - b
a = a - b

a = a ^ b
b = a ^ b
a = a ^ b
print(a, b)


# 有符号整数
print(~a == -a-1)

# 位运算加速
# | 功能                    | 示例                   | 位运算                  |
# |-------------------------|------------------------|-------------------------|
# | 去掉最后一位            | (101101->10110)        | x shr 1                 |
# | 在最后加一个 0          | (101101->1011010)      | x shl 1                 |
# | 在最后加一个 1          | (101101->1011011)      | x shl 1+1               |
# | 把最后一位变成 1        | (101100->101101)       | x or 1                  |
# | 把最后一位变成 0        | (101101->101100)       | x or 1-1                |
# | 最后一位取反            | (101101->101100)       | x xor 1                 |
# | 把右数第 k 位变成 1     | (101001->101101,k=3)   | x or (1 shl (k-1))      |
# | 把右数第 k 位变成 0     | (101101->101001,k=3)   | x and not (1 shl (k-1)) |
# | 右数第 k 位取反         | (101001->101101,k=3)   | x xor (1 shl (k-1))     |
# | 取末三位                | (1101101->101)         | x and 7                 |
# | 取末 k 位               | (1101101->1101,k=5)    | x and (1 shl k-1)       |
# | 取右数第 k 位           | (1101101->1,k=4)       | x shr (k-1) and 1       |
# | 把末 k 位变成 1         | (101001->101111,k=4)   | x or (1 shl k-1)        |
# | 末 k 位取反             | (101001->100110,k=4)   | x xor (1 shl k-1)       |
# | 把右边连续的 1 变成 0   | (100101111->100100000) | x and (x+1)             |
# | 把右起第一个 0 变成 1   | (100101111->100111111) | x or (x+1)              |
# | 把右边连续的 0 变成 1   | (11011000->11011111)   | x or (x-1)              |
# | 取右边连续的 1          | (100101111->1111)      | (x xor (x+1)) shr 1     |
# | 去掉右起第一个 1 的左边 | (100101000->1000)      | x and (x xor (x-1))     |




















